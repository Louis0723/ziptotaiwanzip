{"version":3,"sources":["textplain.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["removeEmptyDir","jszip","files","forEach","path","obj","push","file","dir","folder","i","remove","zipTransfer","a","taiwan","callback","console","log","transfer","opencc","simplifiedToTaiwanWithPhrases","taiwanToSimplifiedWithPhrases","path2","ext","textplain","find","tp","length","substr","async","comment","Jszip","App","useState","setPath","setTaiwan","templateStr","flag","text","setText","changeFlag","e","target","value","func","className","Helmet","name","content","rel","href","packageJson","homepage","src","logo","alt","type","checked","onChange","rawfile","fileName","test","loadAsync","generateAsync","then","blob","saveAs","reader","FileReader","onload","event","result","Blob","readAsText","dangerouslySetInnerHTML","__html","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"gRAAe,GACX,cACA,KACA,OACA,MACA,OACA,OACA,UACA,MACA,IACA,OACA,KACA,MACA,MACA,OACA,OACA,UACA,SACA,OACA,OACA,OACA,SACA,MACA,KACA,SACA,MACA,IACA,OACA,MACA,KACA,SACA,OACA,SACA,SACA,aACA,MACA,MACA,UACA,aACA,KACA,SACA,QACA,UACA,KACA,SACA,MACA,MACA,IACA,aACA,MACA,MACA,MACA,OACA,kBACA,WACA,KACA,KACA,OACA,MACA,OACA,QACA,KACA,KACA,OACA,MACA,MACA,KACA,MACA,MACA,UACA,OACA,MACA,OACA,MACA,MACA,IACA,MACA,WACA,SACA,KACA,KACA,MACA,SACA,KACA,KACA,KACA,OACA,QACA,YACA,MACA,SACA,OACA,MACA,OACA,OACA,OACA,OACA,KACA,QACA,UACA,KACA,MACA,KACA,KACA,IACA,KACA,KACA,MACA,OACA,QACA,MACA,OACA,OACA,KACA,MACA,KACA,OACA,MACA,QACA,MACA,MACA,OACA,IACA,KACA,QACA,MACA,MACA,QACA,MACA,MACA,OACA,MACA,O,QCvHJ,SAASA,EAAeC,GACtB,IAAIC,EAAQ,GACZD,EAAME,SAAQ,SAACC,EAAMC,GACnBH,EAAMI,KAAK,CAACF,EAAMC,OAEpB,cAAiBH,EAAjB,eAAwB,CAAnB,IAAIK,EAAI,KAAW,cACJA,EADI,GACjBH,EADiB,UAEdI,KAAM,WACZ,IAAIA,EAAMP,EAAMQ,OAAOL,GACnBM,EAAI,EACRF,EAAIL,SAAQ,kBAAMO,OACR,IAANA,IACFT,EAAQA,EAAMU,OAAOP,IALX,GAShB,OAAOH,E,SAIMW,E,8EAAf,WAA2BX,GAA3B,qCAAAY,EAAA,sDAAkCC,IAAlC,iCAAiDC,EAAjD,+BAA4DC,QAAQC,IAC5Df,EAAQ,GACdD,EAAME,SAAQ,SAACC,EAAMC,GACnBH,EAAMI,KAAK,CAACF,EAAMC,OAHtB,IAAAQ,EAAA,8CAAAA,EAAA,yDAKWN,EALX,mBAMsBA,EANtB,GAMSH,EANT,UAOaI,IAPb,wBAQMO,EAASX,GACHc,EAAWJ,EAASK,IAAOC,8BAAgCD,IAAOE,8BAClEC,EAAQJ,EAASd,GACjBmB,EAAMC,EAAUC,MAAK,SAAAC,GACzB,OAAItB,EAAKuB,QAAUD,EAAGC,QACbvB,EAAKwB,OAAOxB,EAAKuB,OAASD,EAAGC,UAAYD,KAb1D,SAiB0BzB,EAAMM,KAAKH,GAAMyB,MAAM,UAjBjD,OAiBUC,EAjBV,OAkBUP,IACFO,EAAUZ,EAASY,IAEjB1B,IAASkB,IACXrB,EAAQA,EAAMU,OAAOP,GACrBA,EAAOkB,GAETrB,EAAQA,EAAMM,KAAKe,EAAOQ,GAzBhC,iDAKmB5B,EALnB,uIA4BSD,GA5BT,6C,sBAxBAe,QAAQC,IAAIE,KACZH,QAAQC,IAAIc,KAkIGC,MA5Ef,WAAgB,IAAD,EACWC,mBAAS,2FADpB,mBACN7B,EADM,KACA8B,EADA,OAEeD,oBAAS,GAFxB,mBAENnB,EAFM,KAEEqB,EAFF,KAGPC,EAAc,SAACC,GAAD,mCACbA,EAAO,qBAAQ,qBADF,qJACiCA,EAAO,2BAAS,2BADjD,gOAEoBA,EAAO,MAAQ,MAFnC,wJAGJA,EAAO,eAAO,eAHV,8CAG2BA,EAAO,eAAO,eAHzC,qDAGuDA,EAAO,6BAAgB,GAH9E,wNAHP,EAWWJ,mBAASd,IAAOC,8BAA8BgB,GAAY,KAXrE,mBAWNE,EAXM,KAWAC,EAXA,KAYb,SAASC,EAAWC,GAClB,IAAM3B,EAA4B,MAAnB2B,EAAEC,OAAOC,MAClBC,EAAO9B,EAASK,IAAOC,8BAAgCD,IAAOE,8BACpEc,EAAUrB,GACVyB,EAAQK,EAAKR,EAAYtB,KACzBoB,EAAQU,EAAKxC,IAEf,OACE,yBAAKyC,UAAU,OACb,kBAACC,EAAA,OAAD,KACE,+BAAQ1C,GACR,0BAAM2C,KAAK,cAAcC,QAASV,IAClC,0BAAMW,IAAI,OAAOC,KAAI,UAAKC,EAAYC,UAAjB,OAA4BtC,EAAS,cAAgB,mBAE5E,4BAAQ+B,UAAU,cAChB,yBAAKQ,IAAKC,IAAMT,UAAU,WAAWU,IAAI,SACzC,gEACA,2BAAOC,KAAK,QAAQb,MAAO,IAAKI,KAAK,OAAOU,QAAS3C,EAAQ4C,SAAUlB,KAEvE,gEACA,2BAAOgB,KAAK,QAAQb,MAAO,IAAKI,KAAK,OAAOU,SAAU3C,EAAQ4C,SAAUlB,KAExE,2BAAOgB,KAAK,OAAOE,SAAQ,uCAAE,WAAOjB,GAAP,qBAAA5B,EAAA,yDACrB8C,EAAUlB,EAAEC,OAAOxC,MAAM,GADJ,oDAGrB0D,EAAWD,EAAQZ,MACrB,MAAMc,KAAKD,GAJY,wBAKrB3D,EAAQ,IAAI8B,IALS,SAMX9B,EAAM6D,UAAUH,GANL,cAMzB1D,EANyB,iBAOXW,EAAYX,EAAOa,EAAQoB,GAPhB,QAOzBjC,EAPyB,OAQzBiC,EAAQ,kBACRjC,EAAQD,EAAeC,IACjB8D,cAAc,CAAEP,KAAM,SACzBQ,MAAK,SAAUC,GACd/B,EAAQ,UACRgC,iBAAOD,GAAOnD,EAAS,MAAQ,OAAS6C,EAAQZ,SAb3B,yBAgBnBoB,EAAS,IAAIC,YACZC,OAAS,SAAUC,GAOxB,GANY9C,EAAUC,MAAK,SAAAC,GACzB,OAAIkC,EAASjC,QAAUD,EAAGC,QACjBiC,EAAShC,OAAOgC,EAASjC,OAASD,EAAGC,UAAYD,KAInD,CACP,IACMI,GADWhB,EAASK,IAAOC,8BAAgCD,IAAOE,+BAC/CiD,EAAM5B,OAAO6B,QAChCN,EAAO,IAAIO,KAAK,CAAC1C,GAAU,CAAE0B,KAAM,6BACzCU,iBAAOD,GAAOnD,EAAS,MAAQ,OAAS8C,KAI5CO,EAAOM,WAAWd,GAhCO,4CAAF,wDAmC1BvD,GAEH,0BAAMsE,wBAAyB,CAAEC,OAAQrC,OC3H3BsC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvB,MAAK,SAAAwB,GACjCA,EAAaC,iB,mBErInBC,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.e9d625a8.chunk.js","sourcesContent":["export default [\n    \"applescript\",\n    \"as\",\n    \"atom\",\n    \"bas\",\n    \"bash\",\n    \"boot\",\n    \"_coffee\",\n    \"c++\",\n    \"c\",\n    \"cake\",\n    \"cc\",\n    \"cl2\",\n    \"clj\",\n    \"cljc\",\n    \"cljs\",\n    \"cljs.hl\",\n    \"cljscm\",\n    \"cljx\",\n    \"cjsx\",\n    \"cson\",\n    \"coffee\",\n    \"cpp\",\n    \"cs\",\n    \"csharp\",\n    \"css\",\n    \"d\",\n    \"dart\",\n    \"dfm\",\n    \"di\",\n    \"delphi\",\n    \"diff\",\n    \"django\",\n    \"docker\",\n    \"dockerfile\",\n    \"dpr\",\n    \"erl\",\n    \"fortran\",\n    \"freepascal\",\n    \"fs\",\n    \"fsharp\",\n    \"gcode\",\n    \"gemspec\",\n    \"go\",\n    \"groovy\",\n    \"gyp\",\n    \"h++\",\n    \"h\",\n    \"handlebars\",\n    \"hbs\",\n    \"hic\",\n    \"hpp\",\n    \"html\",\n    \"html.handlebars\",\n    \"html.hbs\",\n    \"hs\",\n    \"hx\",\n    \"iced\",\n    \"irb\",\n    \"java\",\n    \"jinja\",\n    \"jl\",\n    \"js\",\n    \"json\",\n    \"jsp\",\n    \"jsx\",\n    \"kt\",\n    \"ktm\",\n    \"kts\",\n    \"lazarus\",\n    \"less\",\n    \"lfm\",\n    \"lisp\",\n    \"lpr\",\n    \"lua\",\n    \"m\",\n    \"mak\",\n    \"makefile\",\n    \"matlab\",\n    \"md\",\n    \"mk\",\n    \"mkd\",\n    \"mkdown\",\n    \"ml\",\n    \"mm\",\n    \"nc\",\n    \"objc\",\n    \"obj-c\",\n    \"osascript\",\n    \"pas\",\n    \"pascal\",\n    \"perl\",\n    \"php\",\n    \"php3\",\n    \"php4\",\n    \"php5\",\n    \"php6\",\n    \"pl\",\n    \"plist\",\n    \"podspec\",\n    \"ps\",\n    \"ps1\",\n    \"pp\",\n    \"py\",\n    \"r\",\n    \"rb\",\n    \"rs\",\n    \"rss\",\n    \"ruby\",\n    \"scala\",\n    \"scm\",\n    \"scpt\",\n    \"scss\",\n    \"sh\",\n    \"sld\",\n    \"st\",\n    \"styl\",\n    \"sql\",\n    \"swift\",\n    \"tex\",\n    \"txt\",\n    \"thor\",\n    \"v\",\n    \"vb\",\n    \"vbnet\",\n    \"vbs\",\n    \"veo\",\n    \"xhtml\",\n    \"xml\",\n    \"xsl\",\n    \"yaml\",\n    \"yml\",\n    \"zsh\"\n]","import React, { useState } from 'react';\nimport opencc from 'node-opencc'\nimport { Helmet } from 'react-helmet';\nimport { saveAs } from 'file-saver'\nimport logo from './logo.svg';\nimport './App.css';\nimport Jszip from 'jszip'\nimport textplain from './textplain';\nimport packageJson from '../package.json';\nconsole.log(opencc)\nconsole.log(Jszip)\n\n// 處理完後刪除空目錄\nfunction removeEmptyDir(jszip) {\n  let files = []\n  jszip.forEach((path, obj) => {\n    files.push([path, obj]);\n  })\n  for (let file of files) {\n    let [path, obj] = file\n    if (obj.dir) {\n      let dir = jszip.folder(path)\n      let i = 0;\n      dir.forEach(() => i++)\n      if (i === 0) {\n        jszip = jszip.remove(path)\n      }\n    }\n  }\n  return jszip;\n}\n\n// 內容和路徑轉換成臺灣繁體\nasync function zipTransfer(jszip, taiwan = true, callback = console.log) {\n  const files = []\n  jszip.forEach((path, obj) => {\n    files.push([path, obj]);\n  })\n  for (let file of files) {\n    let [path, obj] = file\n    if (!obj.dir) {\n      callback(path) // 處理到哪個檔案了\n      const transfer = taiwan ? opencc.simplifiedToTaiwanWithPhrases : opencc.taiwanToSimplifiedWithPhrases;\n      const path2 = transfer(path) // 路徑轉換\n      const ext = textplain.find(tp => { // 是否為文字檔的副檔名\n        if (path.length >= tp.length) { // 正規表達式此時不好用\n          return path.substr(path.length - tp.length) === tp\n        }\n        return false\n      })\n      let comment = await jszip.file(path).async(\"string\");\n      if (ext) { // 副檔名匹配轉換內容\n        comment = transfer(comment)\n      }\n      if (path !== path2) { // 原路徑刪除\n        jszip = jszip.remove(path)\n        path = path2\n      }\n      jszip = jszip.file(path2, comment);\n    }\n  }\n  return jszip;\n}\n\nfunction App() {\n  const [path, setPath] = useState(\"檔案或ZIP文字內容轉換簡繁體工具\");\n  const [taiwan, setTaiwan] = useState(true);\n  const templateStr = (flag) => `\n  <p>鑑於${flag ? '簡體字' : '繁體字'}和用語不合使用習慣，做了一個將目錄內容全轉換為${flag ? '臺灣繁體' : '簡體中文'}工具</p>\n  <p>先將目錄ZIP打包後，點擊網頁內選擇檔案，處理完成後自動下載，檔名為 ${flag ? 'tw_' : 'cn_'}原名稱.zip <a href=\"./test.zip\">範例.zip</a></p>\n  <p>用途舉例：不幸的交接到${flag ? '簡體' : '繁體'}專案、或clone到${flag ? '簡體' : '繁體'}字做的程式專案${flag ? '(GitHub上一堆)' : ''}</p>\n  <p>使用 React , node-opencc 文字轉換，jszip 存取zip，file-saver 檔案下載</p>\n  <p>現在單一檔案亦支援</p>\n  \n`\n  const [text, setText] = useState(opencc.simplifiedToTaiwanWithPhrases(templateStr(true)));\n  function changeFlag(e) {\n    const taiwan = e.target.value === \"1\"\n    const func = taiwan ? opencc.simplifiedToTaiwanWithPhrases : opencc.taiwanToSimplifiedWithPhrases;\n    setTaiwan(taiwan)\n    setText(func(templateStr(taiwan)))\n    setPath(func(path))\n  }\n  return (\n    <div className=\"App\">\n      <Helmet>\n        <title>{path}</title>\n        <meta name=\"description\" content={text} />\n        <link rel=\"icon\" href={`${packageJson.homepage}${taiwan ? 'favicon.ico' : 'favicon2.ico'}`}></link>\n      </Helmet>\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <label>臺灣繁體化\n        <input type=\"radio\" value={\"1\"} name=\"flag\" checked={taiwan} onChange={changeFlag} />\n        </label>\n        <label>简体中文化\n        <input type=\"radio\" value={\"0\"} name=\"flag\" checked={!taiwan} onChange={changeFlag} />\n        </label>\n        <input type=\"file\" onChange={async (e) => {\n          const rawfile = e.target.files[0];\n          if (!rawfile) return\n          const fileName = rawfile.name;\n          if (/zip/.test(fileName)) {\n            let jszip = new Jszip()\n            jszip = await jszip.loadAsync(rawfile);\n            jszip = await zipTransfer(jszip, taiwan, setPath)\n            setPath(\"Waitting ....\")\n            jszip = removeEmptyDir(jszip)\n            jszip.generateAsync({ type: \"blob\" })\n              .then(function (blob) {\n                setPath(\"Finish\")\n                saveAs(blob, (taiwan ? 'tw_' : 'cn_') + rawfile.name);\n              });\n          } else {\n            const reader = new FileReader();\n            reader.onload = function (event) {\n              const ext = textplain.find(tp => { // 是否為文字檔的副檔名\n                if (fileName.length >= tp.length) { // 正規表達式此時不好用\n                  return fileName.substr(fileName.length - tp.length) === tp\n                }\n                return false\n              })\n              if (ext) { // 副檔名匹配轉換內容\n                const transfer = taiwan ? opencc.simplifiedToTaiwanWithPhrases : opencc.taiwanToSimplifiedWithPhrases;\n                const comment = transfer(event.target.result)\n                const blob = new Blob([comment], { type: \"text/plain;charset=utf-8\" });\n                saveAs(blob, (taiwan ? 'tw_' : 'cn_') + fileName)\n              }\n            };\n\n            reader.readAsText(rawfile);\n          }\n        }} />\n        {path}\n      </header>\n      <span dangerouslySetInnerHTML={{ __html: text }} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}